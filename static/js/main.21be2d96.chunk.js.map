{"version":3,"sources":["hooks/useModal.tsx","views/ReducerDemo.tsx","views/RandomId.tsx","router/index.ts","views/Download.tsx","views/QrFollow.tsx","views/HookDemo.tsx","views/CodeView.tsx","views/Home.tsx","views/NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","show","onCancel","content","className","join","tabIndex","role","type","data-dismiss","aria-label","onClick","aria-hidden","TActionType","initList","initListFunc","initData","map","item","text","keyId","nanoid","reducer","data","action","copyData","add","unshift","remove","filter","search","reset","Error","list","v","toString","selectOptions","key","value","router","path","exact","component","useState","setShow","useLocation","URLSearchParams","get","prev","src","alt","options","selectedOption","setSelectedOption","randomValue","setRandomValue","copyStatus","setCopyStatus","useEffect","useLayoutEffect","document","title","onChange","ev","target","console","log","option","onCopy","_text","result","setTimeout","toggleShow","setContent","fn","onShow","useModal","source","setSource","themes","theme","setTheme","themeValue","setThemeValue","souceOrigin","suffix","a","fetch","res","getSourceCode","id","defaultValue","e","Object","keys","index","disabled","language","style","useReducer","dispatchList","placeholder","trim","link","to","App","pathname","matched","useRouteMatch","rel","href","substr","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21be2d96.chunk.js","sourcesContent":["import { useState } from \"react\"\n\ntype TModalProps = {\n  show: boolean\n  content: string\n  onCancel: (event: React.MouseEvent) => void\n}\n\nfunction Modal({show = false, onCancel, content}: TModalProps) {\n  return (\n    <div className={[\"modal\", show ? 'd-block' : ''].join(' ')} tabIndex={-1} role=\"dialog\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Modal title</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n              onClick={onCancel}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>{content}</p>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onCancel}>Close</button>\n            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function useModal(){\n  const [show, toggleShow] = useState(false)\n  const [content, setContent] = useState('dsd')\n  const onCancel = (fn?: any) => {\n    toggleShow(!show)\n    console.log(fn)\n    if (typeof fn === 'function') {\n      fn()\n    }\n  }\n  const onShow = () => {\n    toggleShow(!show)\n  }\n\n  return [\n    <Modal\n      content={content}\n      show={show}\n      onCancel={onCancel}\n    />,\n    {\n      onCancel,\n      onShow,\n      setContent\n    }\n  ] as (JSX.Element & {\n    [key: string]: (event: React.MouseEvent) => void\n  } &  {\n    [key: string]: React.Dispatch<React.SetStateAction<string>>\n  })[]\n}","import { useReducer } from \"react\"\nimport {nanoid} from \"nanoid\"\n\ntype TListItem = {\n  keyId: string\n  text: string\n}\n\nenum TActionType {\n  add,\n  remove,\n  reset,\n  search\n}\n\ntype TAction = {\n  type: TActionType\n  keyId?: string\n}\n\nconst initList: TListItem[] = [] // reduer 初始化数据，空数组\n\nfunction initListFunc(initData: TListItem[]) { // reducer 数据初始化函数，加工初始化数据，将初始化数据作为默认参数\n  const textArr = [\n    '关于 react/fre',\n    'egg.js 中grpc的正确使用方式是什么？',\n    '深入理解函数调用原理'\n  ]\n  initData = textArr.map(item => ({\n    text: item,\n    keyId: nanoid(5)\n  }))\n  return initData\n}\n\n// reducer 函数返回开发所需目标数据\nfunction reducer(data: TListItem[], action: TAction) {\n  let copyData = [...data] // 保证返回的是 data 副本（有可能是浅拷贝）\n  switch (action.type) { // 更新数据方式（类型）：action.type\n    case TActionType.add: // 通过 add 方式更新数据\n      copyData.unshift({\n        text: nanoid(),\n        keyId: nanoid(5)\n      })\n      break\n    case TActionType.remove:\n      copyData = copyData.filter(item => item.keyId !== action.keyId)\n      break\n    case TActionType.search:\n      if (action.keyId) {\n        copyData = copyData.filter(item => item.keyId === action.keyId)\n      } else {\n        copyData = initListFunc(initList) // 调用 reducer 初始化函数进行数据重置\n      }\n      break\n    case TActionType.reset:\n      copyData = initListFunc(initList) // 调用 reducer 初始化函数进行数据重置\n      break\n    default:\n      throw new Error(`${action.type} 错误`)\n  }\n  return copyData\n}\n\n\nexport default function ReducerDemo() {\n  // list 是初始化数据\n  // dispatchList 类型为函数，更新数据触发器\n  const [list, dispatchList] = useReducer(reducer, initList, initListFunc)\n  return (\n    <div className=\"text-center\">\n      <input type=\"text\"\n        className=\"form-control\"\n        placeholder=\"输入 id 搜索\"\n        onChange={(ev) => dispatchList({ // dispatchList 触发 search 类型更新列表\n          type: TActionType.search,\n          keyId: ev.target.value.trim()\n        })}\n      />\n      <ul className=\"list-group my-4\">\n        {\n          list.map(item => (\n            <li\n              className=\"list-group-item d-flex align-items-center justify-content-between\"\n              key={item.keyId}\n            >\n              <p>\n                <span className=\"badge badge-info h5 mr-3\">{item.keyId}</span>\n                {item.text}\n              </p>\n              <div>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => dispatchList({\n                    type: TActionType.add\n                  })}\n                >新增 item</button>\n                <button\n                  className=\"btn btn-primary ml-3\"\n                  onClick={() => dispatchList({\n                    type: TActionType.remove, // dispatchList 触发 remove 类型更新列表\n                    keyId: item.keyId.trim()\n                  })}\n                >移除 item</button>\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => dispatchList({\n          type: TActionType.reset\n        })}\n      >重置 item</button>\n    </div>\n  )\n}\n","import { nanoid } from \"nanoid\"\nimport { useEffect, useLayoutEffect, useState } from \"react\"\nimport {CopyToClipboard} from \"react-copy-to-clipboard\"\n\ntype ISlectOptions = {\n  key: string\n  value: string\n}\n\nconst list = [4, 5, 6, 7, 8, 9, 10].map(v => v.toString())\nconst selectOptions: ISlectOptions[] = list\n  .map(v => ({\n    key: v,\n    value: `${v} 位随机数`\n  }))\n\nexport default function RandomId() {\n  const [options] = useState<ISlectOptions[]>(() => selectOptions)\n  const [selectedOption, setSelectedOption] = useState<string>(list[2])\n  const [randomValue, setRandomValue] = useState<string>('')\n  const [copyStatus, setCopyStatus] = useState<boolean>(false)\n  const onSelectChange = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n    let value = ev.target.value\n    console.log(value)\n    setSelectedOption(value)\n  }\n\n  useEffect(() => {\n    setRandomValue(nanoid(+selectedOption))\n  }, [selectedOption])\n\n  useLayoutEffect(() => {\n    document.title = '随机字符串生成'\n  }, [])\n\n  return (\n    <div className=\"pt-3\">\n      <h4 className=\"text-center mb-5\">随机字符串生成</h4>\n        <select\n          className=\"form-control w-auto ml-auto mr-auto\"\n          onChange={onSelectChange}\n          value={selectedOption}\n        >\n          {\n            options.map(option => (\n              <option\n                value={option.key}\n                key={option.key}\n              >{option.value}</option>\n            ))\n          }\n        </select>\n        <p className=\"text-info mb-0 text-center my-4\">\n          <span className=\"border d-inline-block px-4 py-2\">{randomValue}</span>\n        </p>\n        <div className=\"d-flex justify-content-center mt-2 align-items-center\">\n          <CopyToClipboard\n            text={randomValue}\n            onCopy={(_text, result) => {\n              setCopyStatus(result)\n              setTimeout(() => {\n                setCopyStatus(false)\n              }, 500)\n            }}\n          >\n            <button className={[\"btn btn-sm\", copyStatus ? 'btn-warning' : 'btn-primary'].join(' ')}>{\n              copyStatus ? '复制成功' : '点击复制'\n            }</button>\n          </CopyToClipboard>\n          <button className=\"btn btn-primary btn-sm ml-3\"\n            onClick={() => setRandomValue(nanoid(+selectedOption))}\n          >重新生成</button>\n        </div>\n    </div>\n  )\n}","import CodeView from '../views/CodeView'\nimport Home from '../views/Home'\nimport HookDemo from '../views/HookDemo'\nimport NotFound from '../views/NotFound'\nimport ReducerDemo from '../views/ReducerDemo'\nimport QrFollow from '../views/QrFollow'\nimport RandomId from '../views/RandomId'\nimport Download from '../views/Download'\n\nconst router = [{\n  path: '/download',\n  exact: true,\n  component: Download\n}, {\n  path: '/randomid',\n  exact: true,\n  component: RandomId\n}, {\n  path: '/qrfollow',\n  exact: true,\n  component: QrFollow\n}, {\n  path: '/hookdemo',\n  exact: true,\n  component: HookDemo\n}, {\n  path: '/codeview',\n  exact: true,\n  component: CodeView\n}, {\n  path: '/reducerdemo',\n  exact: true,\n  component: ReducerDemo\n}, {\n  path: '/',\n  exact: true,\n  component: Home\n}, {\n  path: '',\n  component: NotFound\n}]\n\nexport default router","import { useState } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\nexport default function Download() {\n  const [show, setShow] = useState(false)\n  const onDownload = () => {\n    setShow(prev => !prev)\n  }\n  let {search} = useLocation()\n  let type = new URLSearchParams(search).get('type') ?? '关于'\n  return (\n    <div className=\"text-center pt-3\">\n      <button\n        onClick={onDownload}\n        className=\"btn btn-primary\"\n      >点击下载</button>\n      {\n        show\n        ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"card mt-3\">\n              <div className=\"card-body\">\n                <p className=\"card-text\">扫二维码，回复 {\n                  type === '关于'\n                  ? (\n                    <>\n                      <span className=\"text-info\">{type}</span> 了解更多\n                    </>\n                  )\n                  : (\n                    <>\n                      <span className=\"text-info\">{type}</span> 获取下载链接\n                    </>\n                  )\n                }</p>\n                <img src=\"https://cos.ap-beijing.myqcloud.com/readme-1254963092/logo/wechat.jpeg\" alt=\"\"/>\n              </div>\n            </div>\n          </div>\n        )\n        : null\n      }\n\n    </div>\n  )\n}","import { useState } from \"react\"\n\nexport default function QrFollow() {\n  const [show, setShow] = useState(false)\n  const onDownload = () => {\n    setShow(prev => !prev)\n  }\n  return (\n    <div className=\"text-center pt-3\">\n      <button\n        onClick={onDownload}\n        className=\"btn btn-primary\"\n      >点击下载</button>\n      {\n        show\n        ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"card mt-3\">\n              <div className=\"card-body\">\n                <p className=\"card-text\">扫二维码，回复 <span className=\"text-info\">goland</span> 获取下载链接</p>\n                <img src=\"https://cos.ap-beijing.myqcloud.com/readme-1254963092/logo/wechat.jpeg\" alt=\"\"/>\n              </div>\n            </div>\n          </div>\n        )\n        : null\n      }\n\n    </div>\n  )\n}","import { useModal } from \"../hooks/useModal\"\n\nexport default function HookDemo() {\n  const [Modal, {onShow, setContent}] = useModal()\n  return (\n    <>\n      {Modal}\n      <h3> Hook Modal </h3>\n      <button className=\"btn btn-primary\" onClick={onShow}>打开 Moal</button>\n      <button className=\"btn btn-primary\" onClick={() => setContent('3233ss')}>修改内容</button>\n    </>\n  )\n}","import { useEffect, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport * as themes from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { useLocation } from 'react-router-dom';\n\nexport default function CodeView() {\n  const [source, setSource] = useState('')\n  const [theme, setTheme] = useState(themes['okaidia'])\n  const [themeValue, setThemeValue] = useState('okaidia')\n  const [copyStatus, setCopyStatus] = useState(false)\n  const {search} = useLocation()\n  const souceOrigin = (new URLSearchParams(search)).get('origin')\n  const suffix = (new URLSearchParams(search)).get('suffix') || 'tsx'\n\n  useEffect(() => {\n    async function getSourceCode() {\n      let res =  await fetch(`https://cos.ap-beijing.myqcloud.com/public-data-1254963092/readme-source/${souceOrigin}.${suffix}`)\n      let data = await res.text()\n      setSource(data)\n    }\n    getSourceCode()\n  }, [souceOrigin, suffix])\n  return (\n    <div className=\"d-flex flex-column h100p overflow-hidden\">\n      <div className=\"d-flex pb-2 align-items-center justify-content-between\">\n        <h4>源码演示</h4>\n        <div className=\"d-flex align-items-center\">\n          <div className=\"input-group \">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">当前主题：</span>\n            </div>\n            <select\n              className=\"form-control w-auto\"\n              defaultValue={themeValue}\n              onChange={e => {\n                let themeValue = e.target.value\n                setThemeValue(themeValue)\n                setTheme((themes as any)[themeValue])\n              }}\n            >\n              {\n                Object.keys(themes).map((item, index) => (\n                  <option\n                    value={item}\n                    key={index}>\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n          <CopyToClipboard text={source}\n            onCopy={() => {\n              setCopyStatus(true)\n              setTimeout(() => {\n                setCopyStatus(false)\n              }, 800)\n            }}\n          >\n            <button\n              className={['btn ml-5 nowrap', copyStatus ? 'btn-success' : 'btn-primary'].join(' ')}\n              disabled={copyStatus}\n            >\n              {copyStatus ? '复制成功' : '一键复制'}\n            </button>\n          </CopyToClipboard>\n        </div>\n      </div>\n      <div className=\"flex1 ovy-auto mb-5\">\n        <SyntaxHighlighter language=\"javascript\" style={theme}>\n          {source}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  )\n}","import { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\ntype TList = {\n  text: string\n  link: string\n}\n\nexport default function Home() {\n  const [list] = useState<TList[]>([{\n    text: 'React userReducer 深入认知 »',\n    link: '/ReducerDemo'\n  }, {\n    text: '随机字符串生成 »',\n    link: '/randomid'\n  }])\n  return (\n    <>\n      <h4 className=\"mb-3 text-center\">教程示例</h4>\n      <ul className=\"list-group\">\n        {\n          list.map(item =>\n            <li\n              className=\"list-group-item\"\n              key={item.text}\n            >\n              <NavLink to={item.link}>{item.text}</NavLink>\n            </li>\n          )\n        }\n      </ul>\n    </>\n  )\n}","export default function NotFound() {\n  return (\n    <>\n      <h3>not found</h3>\n    </>\n  )\n}","import { NavLink, Route, Switch, useLocation, useRouteMatch } from \"react-router-dom\";\nimport router from './router'\n\nfunction App() {\n  let {pathname} = useLocation()\n  let matched = useRouteMatch('/ReducerDemo')\n\n  return (\n    <div className=\"app container pt-3\">\n      {\n        matched\n        ? (\n          <div className=\"text-right mb-3\">\n            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://readme.codermore.com/2021/01/11/%E5%89%8D%E7%AB%AF%E5%8F%A3%E8%A2%8B%E5%B0%8F%E5%86%8C-%E7%AC%AC36%E6%9C%9F/\">\n              <button className=\"btn btn-primary mr-3\">教程详情</button>\n            </a>\n            <NavLink to={`codeview?origin=${pathname.substr(1)}`}>\n              <button className=\"btn btn-primary\">查看源码</button>\n            </NavLink>\n          </div>\n        )\n        : null\n      }\n      <Switch>\n        {\n          router.map(route => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={route.exact}\n              component={route.component}\n            />\n          ))\n        }\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}