{"version":3,"sources":["views/ReducerDemo.tsx","router/index.ts","views/CodeView.tsx","views/Home.tsx","views/NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TActionType","initList","initListFunc","initData","map","item","text","keyId","nanoid","reducer","data","action","copyData","type","add","unshift","remove","filter","search","reset","Error","router","path","exact","component","useState","source","setSource","themes","theme","setTheme","themeValue","setThemeValue","copyStatus","setCopyStatus","then","res","default","className","id","defaultValue","onChange","e","target","value","Object","keys","index","onCopy","setTimeout","join","disabled","language","style","useReducer","list","dispatchList","placeholder","ev","trim","onClick","App","pathname","useLocation","matched","useRouteMatch","to","substr","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d469d2c.chunk.js","sourcesContent":["import { useReducer } from \"react\"\nimport {nanoid} from \"nanoid\"\n\ntype TListItem = {\n  keyId: string\n  text: string\n}\n\nenum TActionType {\n  add,\n  remove,\n  reset,\n  search\n}\n\ntype TAction = {\n  type: TActionType\n  keyId?: string\n}\n\nconst initList: TListItem[] = [] // reduer 初始化数据，空数组\n\nfunction initListFunc(initData: TListItem[]) { // reducer 数据初始化函数，加工初始化数据，将初始化数据作为默认参数\n  const textArr = [\n    '关于 react/fre',\n    'egg.js 中grpc的正确使用方式是什么？',\n    '深入理解函数调用原理'\n  ]\n  initData = textArr.map(item => ({\n    text: item,\n    keyId: nanoid(5)\n  }))\n  return initData\n}\n\n// reducer 函数返回开发所需目标数据\nfunction reducer(data: TListItem[], action: TAction) {\n  let copyData = [...data] // 保证返回的是 data 副本（有可能是浅拷贝）\n  switch (action.type) { // 更新数据方式（类型）：action.type\n    case TActionType.add: // 通过 add 方式更新数据\n      copyData.unshift({\n        text: nanoid(),\n        keyId: nanoid(5)\n      })\n      break\n    case TActionType.remove:\n      copyData = copyData.filter(item => item.keyId !== action.keyId)\n      break\n    case TActionType.search:\n      if (action.keyId) {\n        copyData = copyData.filter(item => item.keyId === action.keyId)\n      } else {\n        copyData = initListFunc(initList) // 调用 reducer 初始化函数进行数据重置\n      }\n      break\n    case TActionType.reset:\n      copyData = initListFunc(initList) // 调用 reducer 初始化函数进行数据重置\n      break\n    default:\n      throw new Error(`${action.type} 错误`)\n  }\n  return copyData\n}\n\n\nexport default function ReducerDemo() {\n  // list 是初始化数据\n  // dispatchList 类型为函数，更新数据触发器\n  const [list, dispatchList] = useReducer(reducer, initList, initListFunc)\n  return (\n    <div className=\"text-center\">\n      <input type=\"text\"\n        className=\"form-control\"\n        placeholder=\"输入 id 搜索\"\n        onChange={(ev) => dispatchList({ // dispatchList 触发 search 类型更新列表\n          type: TActionType.search,\n          keyId: ev.target.value.trim()\n        })}\n      />\n      <ul className=\"list-group my-4\">\n        {\n          list.map(item => (\n            <li\n              className=\"list-group-item d-flex align-items-center justify-content-between\"\n              key={item.keyId}\n            >\n              <p>\n                <span className=\"badge badge-info h5 mr-3\">{item.keyId}</span>\n                {item.text}\n              </p>\n              <div>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => dispatchList({\n                    type: TActionType.add\n                  })}\n                >新增 item</button>\n                <button\n                  className=\"btn btn-primary ml-3\"\n                  onClick={() => dispatchList({\n                    type: TActionType.remove, // dispatchList 触发 remove 类型更新列表\n                    keyId: item.keyId.trim()\n                  })}\n                >移除 item</button>\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => dispatchList({\n          type: TActionType.reset\n        })}\n      >重置 item</button>\n    </div>\n  )\n}\n","import CodeView from '../views/CodeView'\nimport Home from '../views/Home'\nimport NotFound from '../views/NotFound'\nimport ReducerDemo from '../views/ReducerDemo'\nconst router = [{\n  path: '/codeview',\n  exact: true,\n  component: CodeView\n}, {\n  path: '/reducerdemo',\n  exact: true,\n  component: ReducerDemo\n}, {\n  path: '/',\n  exact: true,\n  component: Home\n}, {\n  path: '',\n  component: NotFound\n}]\n\nexport default router","import { useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport * as themes from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nexport default function CodeView() {\n  const [source, setSource] = useState('')\n  const [theme, setTheme] = useState(themes['okaidia'])\n  const [themeValue, setThemeValue] = useState('okaidia')\n  const [copyStatus, setCopyStatus] = useState(false)\n\n  import('./CodeView.source.js')\n  .then(res => {\n    setSource(res.default)\n  })\n  return (\n    <div className=\"d-flex flex-column h100p overflow-hidden\">\n      <div className=\"d-flex pb-2 align-items-center justify-content-between\">\n        <h4>源码演示</h4>\n        <div className=\"d-flex align-items-center\">\n          <div className=\"input-group \">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">当前主题：</span>\n            </div>\n            <select\n              className=\"form-control w-auto\"\n              defaultValue={themeValue}\n              onChange={e => {\n                let themeValue = e.target.value\n                setThemeValue(themeValue)\n                setTheme((themes as any)[themeValue])\n              }}\n            >\n              {\n                Object.keys(themes).map((item, index) => (\n                  <option\n                    value={item}\n                    key={index}>\n                    {item}\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n          <CopyToClipboard text={source}\n            onCopy={() => {\n              setCopyStatus(true)\n              setTimeout(() => {\n                setCopyStatus(false)\n              }, 800)\n            }}\n          >\n            <button\n              className={['btn ml-5 nowrap', copyStatus ? 'btn-success' : 'btn-primary'].join(' ')}\n              disabled={copyStatus}\n            >\n              {copyStatus ? '复制成功' : '一键复制'}\n            </button>\n          </CopyToClipboard>\n        </div>\n      </div>\n      <div className=\"flex1 ovy-auto mb-5\">\n        <SyntaxHighlighter language=\"javascript\" style={theme}>\n          {source}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  )\n}","export default function Home() {\n  return (\n    <>\n      <h3>教程示例</h3>\n    </>\n  )\n}","export default function NotFound() {\n  return (\n    <>\n      <h3>not found</h3>\n    </>\n  )\n}","import { NavLink, Route, Switch, useLocation, useRouteMatch } from \"react-router-dom\";\nimport router from './router'\n\nfunction App() {\n  let {pathname} = useLocation()\n  let matched = useRouteMatch('/ReducerDemo')\n\n  return (\n    <div className=\"app container pt-3\">\n      {\n        matched\n        ? (\n          <div className=\"text-right\">\n            <NavLink to={`codeview?origin=${pathname.substr(1)}`}>\n              <button className=\"btn btn-primary mb-3\">查看源码</button>\n            </NavLink>\n          </div>\n        )\n        : null\n      }\n      <Switch>\n        {\n          router.map(route => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={route.exact}\n              component={route.component}\n            />\n          ))\n        }\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}